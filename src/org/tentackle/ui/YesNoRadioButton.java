/**
 * Tentackle - a framework for java desktop applications
 * Copyright (C) 2001-2008 Harald Krake, harald@krake.de, +49 7722 9508-0
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

// $Id: YesNoRadioButton.java 336 2008-05-09 14:40:20Z harald $

package org.tentackle.ui;


/**
 * Radiobuttons to get a definitive decision from the user.
 * The user must click yes or no or the answer is undetermined.
 */
public class YesNoRadioButton extends FormComponentPanel {
  
  private Boolean savedValue;
  

  /**
   * Creates a YesNoRadioButton.
   */
  public YesNoRadioButton() {
    initComponents();
    setYesText(Locales.bundle.getString("yes"));
    setNoText(Locales.bundle.getString("no"));
    setFormComponent(yesButton);
  }
  
  
  /**
   * Checks if user has chosen a value.
   *
   * @return true if neither yes nor no selected, false otherwise
   */  
  public boolean isUndetermined() {
    return yesButton.isSelected() == false && noButton.isSelected() == false;
  }
  
  
  /**
   * Gets the decision.
   *
   * @return Boolean.TRUE if yes, Boolean.FALSE if no, null if no decision by user
   */
  public Boolean getSelected() {
    return isUndetermined() ? null : yesButton.isSelected();
  }
  
  
  /**
   * @see #getSelected()
   */
  @Override
  public Boolean getFormValue() {
    return getSelected();
  }
  

  
  /**
   * Sets the value.
   * 
   * @param selected is Boolean.TRUE if yes, Boolean.FALSE if no, null if no decision by user
   */
  public void setSelected(Boolean selected) {
    if (selected == null) {
      yesButton.setSelected(false);
      noButton.setSelected(false);
    }
    else  {
      yesButton.setSelected(selected);
      noButton.setSelected(!yesButton.isSelected());
    }
  }
  
  /**
   * @see #setSelected(Boolean)
   */
  @Override
  public void setFormValue(Object object) {
    setSelected(object instanceof Boolean ? (Boolean)object : null);
  }
  
  
  /**
   * Sets the text for the "yes" button.
   * 
   * @param text the text for the "yes" button
   */
  public void setYesText(String text) {
    yesButton.setText(text);
  }
  
  /**
   * Gets the text for the "yes" button.
   * 
   * @return the text for the "yes" button
   */
  public String getYesText() {
    return yesButton.getText();
  }
  
  /**
   * Sets the text for the "no" button.
   * 
   * @param text the text for the "no" button
   */
  public void setNoText(String text) {
    noButton.setText(text);
  }
  
  /**
   * Gets the text for the "no" button.
   * 
   * @return the text for the "no" button
   */
  public String getNoText() {
    return noButton.getText();
  }
  
  
  
  
  @Override
  public void setChangeable (boolean changeable)  {
    super.setChangeable(changeable);
    noButton.setChangeable(changeable);
  }
  
  @Override
  public void saveValue() {
    if (isHonourChangeable()) {
      savedValue = getSelected();
    }
  }
  
  @Override
  public boolean isValueChanged() {
    if (!isHonourChangeable()) {
      return false;
    }
    Boolean value = getSelected();
    if (value == null)  {
      return savedValue != null;
    }
    else  {
      return savedValue == null || savedValue.booleanValue() != value.booleanValue();
    }
  }
  
  
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    yesButton = new org.tentackle.ui.FormRadioButton();
    noButton = new org.tentackle.ui.FormRadioButton();

    setLayout(new java.awt.GridBagLayout());

    setToolTipText("");
    yesButton.setText("Yes");
    yesButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    yesButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
    yesButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        yesButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    add(yesButton, gridBagConstraints);

    noButton.setText("No");
    noButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    noButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
    noButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        noButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
    add(noButton, gridBagConstraints);

  }// </editor-fold>//GEN-END:initComponents

  private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
    if (noButton.isSelected()) {
      yesButton.setSelected(false);
    }
    fireValueEntered();
  }//GEN-LAST:event_noButtonActionPerformed

  private void yesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesButtonActionPerformed
    if (yesButton.isSelected()) {
      noButton.setSelected(false);
    }
    fireValueEntered();
  }//GEN-LAST:event_yesButtonActionPerformed


  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private org.tentackle.ui.FormRadioButton noButton;
  private org.tentackle.ui.FormRadioButton yesButton;
  // End of variables declaration//GEN-END:variables
  
}

