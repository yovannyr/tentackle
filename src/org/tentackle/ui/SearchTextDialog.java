/**
 * Tentackle - a framework for java desktop applications
 * Copyright (C) 2001-2008 Harald Krake, harald@krake.de, +49 7722 9508-0
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

// $Id: SearchTextDialog.java 336 2008-05-09 14:40:20Z harald $

// Created on February 3, 2003, 3:16 PM

package org.tentackle.ui;

import org.tentackle.plaf.PlafGlobal;


/**
 * A simple dialog to edit a search text.
 * <p>
 * Used in {@link FormTableUtilityPopup}.
 */
public class SearchTextDialog extends org.tentackle.ui.FormDialog {
  
  private String searchText;      // search text
  private boolean caseSensitive;  // true if case-sensitive, default is false
  private boolean okFlag;         // returnval from showDialog();
  
  
  /**
   * Creates a search dialog
   */
  public SearchTextDialog() {
    initComponents();
  }
  
  
  /**
   * Displays the modal dialog and prompts the user for the search text.
   * @param searchText the initial search text
   * @param caseSensitive the initial value for caseSensitive
   * @return true if ok-button pressed, false if cancel
   */
  public boolean showDialog(String searchText, boolean caseSensitive) {
    okFlag = false;
    this.searchText = searchText;
    this.caseSensitive = caseSensitive;
    setFormValues();
    pack();
    setVisible(true);
    return okFlag;
  }
  
  /**
   * Displays the modal dialog and prompts the user for the search text.
   * @return true if ok-button pressed, false if cancel
   */
  public boolean showDialog() {
    return showDialog(null, false);
  }
  
  
  /**
   * Gets the search text.
   * @return the search text
   */
  public String getSearchText() {
    return searchText;
  }
  
  /**
   * Gets the case sensitivity
   * @return true if case sensitive
   */
  public boolean isCaseSensitive()  {
    return caseSensitive;
  }
  
  
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    searchPanel = new org.tentackle.ui.FormPanel();
    jLabel1 = new javax.swing.JLabel();
    searchTextField = new org.tentackle.ui.StringFormField();
    uclcCheckBox = new org.tentackle.ui.FormCheckBox();
    buttonPanel = new org.tentackle.ui.FormPanel();
    searchButton = new org.tentackle.ui.FormButton();
    cancelButton = new org.tentackle.ui.FormButton();

    setAutoPosition(true);
    setTitle(Locales.bundle.getString("Suchen")); // NOI18N
    addFormWrapListener(new org.tentackle.ui.FormWrapListener() {
      public void formWrapped(org.tentackle.ui.FormWrapEvent evt) {
        formFormWrapped(evt);
      }
    });

    searchPanel.setLayout(new java.awt.GridBagLayout());

    jLabel1.setText(Locales.bundle.getString("Suchtext:")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
    searchPanel.add(jLabel1, gridBagConstraints);

    searchTextField.setColumns(20);
    searchTextField.addValueListener(new org.tentackle.ui.ValueListener() {
      public void valueEntered(org.tentackle.ui.ValueEvent evt) {
        searchTextFieldValueEntered(evt);
      }
      public void valueChanged(org.tentackle.ui.ValueEvent evt) {
        searchTextFieldValueChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
    searchPanel.add(searchTextField, gridBagConstraints);

    uclcCheckBox.setText(Locales.bundle.getString("Gross/Kleinschreibung_beachten?")); // NOI18N
    uclcCheckBox.addValueListener(new org.tentackle.ui.ValueListener() {
      public void valueEntered(org.tentackle.ui.ValueEvent evt) {
        uclcCheckBoxValueEntered(evt);
      }
      public void valueChanged(org.tentackle.ui.ValueEvent evt) {
        uclcCheckBoxValueChanged(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
    searchPanel.add(uclcCheckBox, gridBagConstraints);

    getContentPane().add(searchPanel, java.awt.BorderLayout.CENTER);

    searchButton.setIcon(PlafGlobal.getIcon("search"));
    searchButton.setMnemonic('s');
    searchButton.setText(Locales.bundle.getString("suchen")); // NOI18N
    searchButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchButtonActionPerformed(evt);
      }
    });
    buttonPanel.add(searchButton);

    cancelButton.setIcon(PlafGlobal.getIcon("cancel"));
    cancelButton.setMnemonic('a');
    cancelButton.setText(Locales.bundle.getString("abrechen")); // NOI18N
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });
    buttonPanel.add(cancelButton);

    getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void formFormWrapped(org.tentackle.ui.FormWrapEvent evt) {//GEN-FIRST:event_formFormWrapped
    searchButton.doClick();
  }//GEN-LAST:event_formFormWrapped

  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    dispose();
  }//GEN-LAST:event_cancelButtonActionPerformed

  private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
    okFlag = true;
    dispose();
  }//GEN-LAST:event_searchButtonActionPerformed

  private void uclcCheckBoxValueEntered(org.tentackle.ui.ValueEvent evt) {//GEN-FIRST:event_uclcCheckBoxValueEntered
    caseSensitive = uclcCheckBox.isSelected();
  }//GEN-LAST:event_uclcCheckBoxValueEntered

  private void uclcCheckBoxValueChanged(org.tentackle.ui.ValueEvent evt) {//GEN-FIRST:event_uclcCheckBoxValueChanged
    uclcCheckBox.setSelected(caseSensitive);
  }//GEN-LAST:event_uclcCheckBoxValueChanged

  private void searchTextFieldValueEntered(org.tentackle.ui.ValueEvent evt) {//GEN-FIRST:event_searchTextFieldValueEntered
    searchText = searchTextField.getText();
  }//GEN-LAST:event_searchTextFieldValueEntered

  private void searchTextFieldValueChanged(org.tentackle.ui.ValueEvent evt) {//GEN-FIRST:event_searchTextFieldValueChanged
    searchTextField.setText(searchText);
  }//GEN-LAST:event_searchTextFieldValueChanged
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private org.tentackle.ui.FormPanel buttonPanel;
  private org.tentackle.ui.FormButton cancelButton;
  private javax.swing.JLabel jLabel1;
  private org.tentackle.ui.FormButton searchButton;
  private org.tentackle.ui.FormPanel searchPanel;
  private org.tentackle.ui.StringFormField searchTextField;
  private org.tentackle.ui.FormCheckBox uclcCheckBox;
  // End of variables declaration//GEN-END:variables
  
}
