/**
 * Tentackle - a framework for java desktop applications
 * Copyright (C) 2001-2008 Harald Krake, harald@krake.de, +49 7722 9508-0
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

// $Id: DbPreferencesKeyRemoteDelegateImpl.java 336 2008-05-09 14:40:20Z harald $
// Created on November 19, 2003, 6:51 PM

package org.tentackle.db.rmi;

import org.tentackle.db.DbPreferencesKey;
import java.rmi.RemoteException;
import java.util.List;

/**
 * Remote delegate implementation for {@link DbPreferencesKey}.
 * 
 * @param <T> the preferences key class
 * @author harald
 */
public class DbPreferencesKeyRemoteDelegateImpl<T extends DbPreferencesKey>
       extends DbObjectRemoteDelegateImpl<T>
       implements DbPreferencesKeyRemoteDelegate {
  
  private static final long serialVersionUID = -3722811765745920803L;
  
  public DbPreferencesKeyRemoteDelegateImpl(RemoteDbSessionImpl session, Class<T> clazz) throws RemoteException {
    super(session, clazz);
  }
  
  
  // @wurblet inclrmi Include --missingok .DbPreferencesKeyRemoteDelegateImpl/methods

  // Code generated by wurblet. Do not edit!//GEN-BEGIN:inclrmi


  public List<DbPreferencesKey> selectByNodeId(long nodeId) throws RemoteException {
    try {
      return dbObject.selectByNodeId(nodeId);
    }
    catch (Exception e) {
      throw new RemoteException("remote selectByNodeId failed", e);
    }
  }

  public DbPreferencesKey selectByNodeIdKey(long nodeId, String key) throws RemoteException {
    try {
      return newObject().selectByNodeIdKey(nodeId, key);
    }
    catch (Exception e) {
      throw new RemoteException("remote selectByNodeIdKey failed", e);
    }
  }

  public int deleteByNodeId(long nodeId) throws RemoteException {
    try {
      return dbObject.deleteByNodeId(nodeId);
    }
    catch (Exception e) {
      throw new RemoteException("remote deleteByNodeId failed", e);
    }
  }

  // End of wurblet generated code.//GEN-END:inclrmi
  
}
