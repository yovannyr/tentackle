/**
 * Tentackle - a framework for java desktop applications
 * Copyright (C) 2001-2008 Harald Krake, harald@krake.de, +49 7722 9508-0
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

// $Id: ModificationLogRemoteDelegateImpl.java 466 2009-07-24 09:16:17Z svn $
// Created on November 19, 2003, 6:40 PM

package org.tentackle.db.rmi;

import java.util.List;
import org.tentackle.db.ModificationLog;
import java.rmi.RemoteException;

/**
 * Remote delegate implementation  for {@link ModificationLog}.
 * @param <T> the modification log class
 * @author  harald
 */
public class ModificationLogRemoteDelegateImpl<T extends ModificationLog>
             extends DbObjectRemoteDelegateImpl<T>
             implements ModificationLogRemoteDelegate {
  
  private static final long serialVersionUID = 8361989214172961133L;

  
  public ModificationLogRemoteDelegateImpl(RemoteDbSessionImpl session, Class<T> clazz) throws RemoteException {
    super(session, clazz);
  }
  
  // @wurblet inclrmi Include --missingok .$classname/methods

  // Code generated by wurblet. Do not edit!//GEN-BEGIN:inclrmi


  public ModificationLog selectFirst() throws RemoteException {
    try {
      return newObject().selectFirst();
    }
    catch (Exception e) {
      throw new RemoteException("remote selectFirst failed", e);
    }
  }

  public List<ModificationLog> selectByObject(String objectClass, long objectId) throws RemoteException {
    try {
      return dbObject.selectByObject(objectClass, objectId);
    }
    catch (Exception e) {
      throw new RemoteException("remote selectByObject failed", e);
    }
  }

  public boolean isReferencingUser(String user) throws RemoteException {
    try {
      return ModificationLog.isReferencingUser(db, user);
    }
    catch (Exception e) {
      throw new RemoteException("remote isReferencingUser failed", e);
    }
  }

  public boolean isReferencingObject(String objectClass, long objectId) throws RemoteException {
    try {
      return ModificationLog.isReferencingObject(db, objectClass, objectId);
    }
    catch (Exception e) {
      throw new RemoteException("remote isReferencingObject failed", e);
    }
  }

  // End of wurblet generated code.//GEN-END:inclrmi
  
}
